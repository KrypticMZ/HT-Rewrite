package me.htrewrite.client.module.modules.exploit;

import me.htrewrite.client.event.custom.CustomEvent;
import me.htrewrite.client.event.custom.networkmanager.NetworkPacketEvent;
import me.htrewrite.client.module.Module;
import me.htrewrite.client.module.ModuleType;
import me.htrewrite.exeterimports.mcapi.settings.IntegerSetting;
import me.htrewrite.exeterimports.mcapi.settings.ToggleableSetting;
import me.htrewrite.exeterimports.mcapi.settings.ValueSetting;
import me.zero.alpine.fork.listener.EventHandler;
import me.zero.alpine.fork.listener.Listener;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.gameevent.TickEvent;

public class TickShiftMudule extends Module {

    public static final ToggleableSetting autodisable = new ToggleableSetting("AutoDisable", true);
    public static final IntegerSetting disableTicks = new IntegerSetting("DisableTicks", 17, 1, 100);
    public static final ValueSetting<Double> multiplier = new ValueSetting<>("Multiplier", 3d, 1d, 10d);




    public TickShiftMudule() {
        super("TickShift", "Gives a little packet boost", ModuleType.Exploits, 0);
        addOption(autodisable);
        addOption(disableTicks.setVisibility(v -> autodisable.isEnabled()));
        addOption(multiplier);
        endOption();
    }


    @Override
    public void onEnable() {
        super.onEnable();

        mc.timer.tickLength = ((float) (50.0 / multiplier.getValue()));

    }

    private int ticksPassed = 0;
    @EventHandler
    private final Listener<TickEvent.ClientTickEvent> tickEventListener = new Listener<>(event -> {
        if (!autodisable.isEnabled())
            return;


        ticksPassed++;

        if (ticksPassed >= disableTicks.getValue()) {
            ticksPassed = 0;
            toggle();

        }
    });

    public void onDisable() {
        super.onDisable();
        mc.timer.tickLength = 50f;
    }
}
